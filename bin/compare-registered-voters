#!/usr/bin/perl -Ilib -Iblib/lib -I../lib

use Modern::Perl;
use FOEGCL::App::CompareRegisteredVoters;

{
    package StartCompareRegisteredVoters;
    use Moo;
    use MooX::Options;
    use MooX::Types::MooseLike::Base qw( :all );
    use File::Share qw( :all );
    use Path::Tiny;

    option membership_csv => (
        is => 'ro',
        format => 's',
        doc => 'path/to/friends/membership/file.csv',
        isa => sub {
            die "Membership CSV must be a file readable to the current user."
            unless -e $_[0] && -f $_[0] && -r $_[0]
        },
        builder => 1,
    );

    option voter_csv => (
        is => 'ro',
        format => 's',
        doc => 'path/to/voter/file.csv',
        isa => sub {
            die "Voter CSV must be a file readable to the current user."
            unless -e $_[0] && -f $_[0] && -r $_[0]
        },
        builder => 1,
    );
    
    option logfile => (
        is => 'ro',
        format => 's',
        doc => 'path/to/outfile',
        isa => sub {
            die "If logfile exists already, it must be a file writable by you."
            unless (!-e $_[0]) || (-f $_[0] && -w $_[0])
        },
        builder => 1,
    );

    sub _build_membership_csv {
        my $self = shift;

        warn "Attempting to use distribution membership CSV.\n";
        return $self->_localize_filepath(
            dist_file('FOEGCL', 'current-memberships.csv')
        );
    }

    sub _build_voter_csv {
        my $self = shift;

        warn "Attempting to use distribution voter CSV.\n";
        return $self->_localize_filepath(
            dist_file('FOEGCL', 'votexprt.csv')
        );
    }
    
    sub _build_logfile {
        return 'compare-registered-voters.log';
    }

    sub _localize_filepath {
        my $self = shift;
        my $filepath = shift;

        return path($filepath)->relative(Path::Tiny->cwd);    
    }
    
    sub run {
        my $self = shift;
        
        FOEGCL::App::CompareRegisteredVoters->new(
            voter_csv => $self->voter_csv,
            membership_csv => $self->membership_csv,
            logfile => $self->logfile,
        )->run;
    }

    1;
}

StartCompareRegisteredVoters->new_with_options()->run();